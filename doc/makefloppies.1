.TH makefloppies 1 "19apr97" fdutils-5.0
.SH Name
MAKEFLOPPIES - Creates the default floppy device nodes.
'\" t
.de TQ
.br
.ns
.TP \\$1
..

.tr \(is'
.tr \(if`
.tr \(pd"

.SH Note
This manpage has been automatically generated from fdutils's texinfo
documentation.  However, this process is only approximative, and some
items, such as crossreferences, footnotes and indices are lost in this
translation process.  Indeed, this items have no appropriate
representation in the manpage format.  Moreover, only the items specific
to each command have been translated, and the general information about
fdutils has been dropped in the manpage version.  Thus I strongly advise
you to use the original texinfo doc.
.TP
* \ \ 
To generate a printable copy from the texinfo doc, run the following
commands:
 
.nf
.ft 3
.in +0.3i
    ./configure; make dvi; dvips fdutils.dvi
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.TP
* \ \ 
To generate a html copy,  run:
 
.nf
.ft 3
.in +0.3i
    ./configure; make html
.fi
.in -0.3i
.ft R
.lp
 
\&\fRA premade html can be found at:
\&\fR\&\f(CW\(ifhttp://linux.wauug.org/pub/knaff/fdutils\(is\fR
.TP
* \ \ 
To generate an info copy (browsable using emacs' info mode), run:
 
.nf
.ft 3
.in +0.3i
    ./configure; make info
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
The texinfo doc looks most pretty when printed or as html.  Indeed, in
the info version certain examples are difficult to read due to the
quoting conventions used in info.
.SH Description
.PP
 
.nf
.ft 3
.in +0.3i
\&\fR\&\f(CWMAKEFLOPPIES [\fR\&\f(CW-tlvng] [\fIdrives\fR\&\f(CW]
.fi
.in -0.3i
.ft R
.lp
 
\&\fR
.PP
The \fR\&\f(CWMAKEFLOPPIES\fR shell script creates the new floppy block device
node.  It uses the floppycontrol program to translate the minor device
numbers into meaningful names. It also uses these names to decide
whether to create a given block device file or not, depending on the
type of the physical drive (for instance, for a 3 1/2 drive, the formats
corresponding to a 5 1/4 drive are not created).
.PP
If you have more than two floppy drives, you need to tell the kernel
the CMOS types of those additional drives using the
\&\fR\&\f(CWfloppy=\fR\fIdrive\fR\fR\&\f(CW,\fR\fItype\fR\fR\&\f(CW,cmos\fR lilo option.
.PP
If the \fIdrives \fR parameter is given, only the device nodes for the
listed drives are made. By default, all only the two first drives are
tried.
.PP
\&\fR\&\f(CWMAKEFLOPPIES\fR does not work if you redefine your default formats.
.PP
\&\fBCaution\fR:
\&\fR\&\f(CWMAKEFLOPPIES\fR removes already existing floppy device nodes.
.PP
.SH Options
.IP
.TP
\&\fR\&\f(CW-t\fR\ 
Use the old naming convention for 3 1/2 devices (e.g. \fR\&\f(CW\(iffd0H720\(is\fR
instead of \fR\&\f(CW\(iffd0u720\(is\fR).
.TP
\&\fR\&\f(CW-m\fR\ 
Base the name for the created devices on the type of the media
(e.g. \fR\&\f(CW\(iffd0h720\(is\fR instead of \fR\&\f(CW\(iffd0u720\(is\fR).
.TP
\&\fR\&\f(CW-l\fR\ 
Local. Creates device nodes in the local directory, not /dev
.TP
\&\fR\&\f(CW-v\fR\ 
Verbose
.TP
\&\fR\&\f(CW-n\fR\ 
Dry run. (just report what would be done, do not do anything)
.TP
\&\fR\&\f(CW-g\fR\ 
Group.  Allow read/write access to floppy devices only for group
\&\fR\&\f(CW\(iffloppy\(is\fR
.PP
.SH Bugs
The Makefloppies script does not work on redefined "default" formats, If
you redefine default formats, you need to create the needed device nodes
manually.
.SH See Also
Fdutils' texinfo doc

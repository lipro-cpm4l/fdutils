.TH FDRAWCMD 1 "27apr1995" "fdutils" "fdutils"
.de BP
.sp
.ti \-.2i
\(**
..
.SH NAME
fdrawcmd \- send raw commands to the floppy disk controller
.SH SYNOPSIS
.hy 0
.na
.B rawcmd
[\fBdrive=\fIdrive\fR]
[\fBrate=\fIrate\fR]
[\fBlength=\fIlength\fR]
[\fBrepeat=\fIcount\fR]
[\fRseek=\fIphysical_track\fR]
.I command
[\fIparameters\fR...]
[\fImode\fR]
.ad b
.hy 1
.SH DESCRIPTION
.B fdrawcmd
is used to send raw commands to the floppy disk controller, after
having selected a given drive. You must have write permission to the
selected drive.
.PP
When writing to a disk, data is read from stdin; when reading, data
is printed to stdout.  Diagnostic messages, return values from the
controller, and the value of the disk change line after the command are
printed to stderr.
.SH OPTIONS
All numbers may be given in octal (0209), decimal (137), or hexadecimal
(0x89).
.TP
.BI "drive=" "drive"
Selects the drive.  The default is drive 0
.RI ( /dev/fd0 ).
.TP
.BI "rate=" "rate"
Selects the data transfer rate. Use 0 for high density disks, 1 for
double density 5\ 1/4 disks (or 2 Mbps tapes, if the appropriate rate
table is selected), and 2 for double density 3\ 1/2 disks.
.TP
.BI "length=" "length"
Describes the length of the transferred data for commands reading from
and writing to the disk.  The default is to continue until EOF.
.TP
.BI "repeat=" "count"
Repeat the command
.I count
times. This only works correctly for commands which don't do any data
transfer.
.TP
.I "command"
The name of the command to send.
.I command
may be a spelled out name (like
.B read 
or 
.BR write ),
or a number. A named command has already a mode, whereas for a
number the mode parameter should be described using the appropriate
option.
.TP
.I "parameter"
The parameter for the command.
.TP
.I "mode"
Various flags or'ed together describing the properties of the command.
.SH COMMANDS
The description of the various floppy commands given in this manpage
is very sketchy. For more details get the 82078 spec sheet which can
be found at
.B http://www-techdoc.intel.com/docs/periph/fd_contr/datasheets/\c
\&. Look for the chapter
.B "COMMAND SET/DESCRIPTIONS"\c
\&.  Older FDCs only support a subset of the commands described
therein, but the syntax for the commands that do exist is the same.
.SS Commands available on all FDCs
.TP
.BI read " drivesel track head sector sizecode sect_per_track rw_gap sizecode2"
Reads 
.I length 
bytes of data from the disk.
.I drivesel
is the drive selector. Bit 0 and 1 describe the drive, and bit 2 describes
the head.  The remaining parameters give the track, head (yes, again),
sector, size of the sector (128 * 2 ^ \fIsizecode\fR), sectors per track
(used to switch to the second head when the first side has been read),
and size of the read-write gap.
.I sizecode2
should be 0xff.
.B read
returns 
.I ST0 ST1 ST2 
and 
.I track head sector sizecode 
of the next sector to be read; see
.IR /usr/include/linux/fdreg.h .
.TP 
.BI write " drivesel track head sector sizecode sect_per_track rw_gap sizecode"
Analogous to
.BR read .
.TP
.BI sense " drivesel"
Returns the third status byte
.RI ( ST3 ).
.TP
.BI recalibrate " drivesel"
Recalibrates the drive and returns
.IR "ST0 ST1" .
.TP
.BI seek " drivesel track"
Moves the head to
.I track
and returns
.IR "ST0 ST1" .
.TP
.BI specify " drivesel spec1 spec2"
Specify various parameters to the drive.
.TP
.BI format " drivesel sizecode sect_per_track fmt_gap fmt_fill"
Formats the track. The new sectors are filled with
.IR fmt_fill .
The header information comes from the input, which is made up of
.I track head sector sizecode
quadruples. The 
.I sizecode
parameter from the command line is used to describe the actual size of
the sectors, and the
.I sizecode
from the input is used to write into the header. However, the first
write to these sectors will use the header information, and might
overwrite the following sectors if the
.I sizecode
parameter from the command line was too small.
.TP
.BI readid " drivesel"
reads the first sector header that comes and returns 
.I ST0 ST1 ST2 
and 
.I track head sector sizecode 
of the encountered header.
.SS Commands available on 82072 and later
.TP
.BI dumpregs
Prints the contents of the FDCs registers, if supported.
.SS Commands available on 82072A and later
.TP
.BI configure " conf1 conf2 conf3"
Configures FIFO operation.
.SS Commands available on 82077 and later
.TP
.BI version
Echoes 0x90 if the FDC is more recent than 82072A, and 0x80 otherwise
.TP
.BI perpendicular " rate"
Sets the perpendicular mode.  Use 0 for normal, 2 for 500Kbps
perpendicular, and 3 for 1Mbps perpendicular.
.TP
.BI seek_out " drivesel n"
does a relative seek of
.I n
tracks towards track 0.
.TP
.BI seek_in  " drivesel n"
does a relative seek of
.I n
tracks towards the high numbered track.
.SS Commands available on 82077AA and later
.TP
.BI lock
Locks the FIFO configuration, so that it survives a FDC software reset.
.TP
.BI unlock
Unlock the FIFO configuration
.SS Commands available on 82078
.TP
.BI partid
echoes a byte describing the type of the FDC in the 3 high bits, and
the stepping in the three low bits.
.TP
.BI powerdown " powerconf"
configures automatic power down of the FDC. The old configuration is echoed
.TP
.BI option " iso"
enables/disables ISO formats. Odd values of
.I iso
enable these formats, whereas even values disable them. ISO formats
don't have index headers, and thus allow to fit slightly more data on
a disk.
.TP
.BI save
prints out 16 internal registers of the FDC.
.TP
.BI restore " r1 r2 r3 ... r16"
restores the 16 internal registers of the FDC.
.TP
.BI format_n_write " drivesel sizecode sect_per_track fmt_gap fmt_fill"
formats the track and writes initial data to it. The input data is
made up of a sequence of headers (4 bytes) and data:
.I header1 data1 header2 sector2 ... headern sectorn
.TP
.BI drivespec " dspec1 dspec2 ... specn terminator"
chooses rate tables for various drives. Each dspec byte describes one
drive. Bits 0 and 1 say which drive is described. Bits 2 and 3
describe the rate table. Only tables 0 and 2 are interesting. Both
tables only differ in the meaning og rate 1. For table 0 (the default)
rate 0 is 300 Kbps (used for 5 1/4 DD disks), whereas for table 1 it
is 2 Mbps (used for fast floppy tape drives). Bit 4 is the
precompensation table select bit. It should be set to 0. Bit 5-7
should be zero as well. The
.I terminator
byte ends the
.B drivespec
command. It is either 0xc0 or 0x80. If it is 0xc0, no result phase
follows; if it is 0x80, the current data rate table configuration
for the four drives is echoed.
.SH MODES
The mode option is only needed when you describe the command as a
numerical value. Some mode names are also valid command names. They
are considered as command name if the command name has not yet been
given, and as mode name otherwise. If you give a command name and an
explicit mode, both the implicit flags of the command name, and the
explicit mode are or'ed together. Several modes may be or'ed together
too.
.TP
.B read
Read data from disk using DMA.
.TP
.B write
Write data to the disk.
.TP
.B intr
Wait for an interrupt.
.TP 
.B spin
wait for the disk to spin up
.TP
.B need_seek
Seeks the drives head to the correct track (as given by the seek
parameter) before sending the command.
.TP
.B disk
Aborts the operation if no disk is in the drive. This only works if
need_seek is also chosen.
.TP
.B no_motor
Don't switch on the drive motor while issuing the command
.TP
.B no_motor_after
Switch off the motor immediately after the command returns.
.SH RESET
.B fdrawcmd
opens the device node with the
.B NDELAY
flag. This means that
the driver should not try to autodetect the disk type (it might not be
formatted), and that it should not reset the FDC. If a reset was
needed, the command simply fails. If that happens, execute
.BR "floppycontrol --resetnow 0" ,
and try again.
.SH FILES
/dev/fd* - Floppy devices
.SH AUTHOR
Alain Knaff, Alain.Knaff@inrialpes.fr
.SH SEE ALSO
.BR superformat (1),
.BR getfdprm (1),
.BR floppycontrol (1)
